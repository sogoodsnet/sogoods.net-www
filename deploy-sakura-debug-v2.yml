name: Deploy to Sakura Server (Debug v2)

on:
  workflow_dispatch:

jobs:
  debug-ssh-detailed:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Debug Environment
      run: |
        echo "🔍 GitHub Actions環境情報"
        echo "Runner OS: $(uname -a)"
        echo "SSH Client Version: $(ssh -V 2>&1)"
        echo "OpenSSL Version: $(openssl version)"
        
    - name: Debug SSH Key Format
      run: |
        echo "🔑 SSH鍵の詳細確認"
        if [ -n "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
          echo "✅ SSH_PRIVATE_KEY Secret が設定されています"
          echo "鍵の最初の行:"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | head -1
          echo "鍵の最後の行:"  
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tail -1
          echo "鍵の行数:"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -l
          echo "鍵の文字数:"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | wc -c
        else
          echo "❌ SSH_PRIVATE_KEY Secret が設定されていません"
          exit 1
        fi
        
    - name: Test SSH Connection with Verbose
      run: |
        echo "🔧 SSH接続テスト（詳細ログ付き）"
        
        # SSH鍵を一時ファイルに保存
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
        chmod 600 /tmp/ssh_key
        
        # SSH接続テスト（詳細ログ）
        echo "SSH接続テスト開始..."
        ssh -i /tmp/ssh_key \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -o ConnectTimeout=30 \
            -v \
            sogoodsnet@sogoodsnet.sakura.ne.jp \
            'echo "SSH接続成功: $(date)" && whoami && pwd' || {
          echo "❌ SSH接続に失敗しました"
          echo "エラーコード: $?"
        }
        
        # 一時ファイル削除
        rm -f /tmp/ssh_key
        
    - name: Alternative SSH Test with Different Options
      run: |
        echo "🔄 代替SSH接続オプションでテスト"
        
        # SSH鍵を一時ファイルに保存
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key2
        chmod 600 /tmp/ssh_key2
        
        # 異なるSSHオプションでテスト
        ssh -i /tmp/ssh_key2 \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -o PasswordAuthentication=no \
            -o PubkeyAuthentication=yes \
            -o ConnectTimeout=10 \
            -o ServerAliveInterval=10 \
            sogoodsnet@sogoodsnet.sakura.ne.jp \
            'echo "代替接続成功"' || {
          echo "❌ 代替SSH接続も失敗"
          
          # ネットワーク接続確認
          echo "🌐 ネットワーク接続確認"
          ping -c 3 sogoodsnet.sakura.ne.jp || echo "ping failed"
          nslookup sogoodsnet.sakura.ne.jp || echo "DNS resolution failed"
        }
        
        # 一時ファイル削除
        rm -f /tmp/ssh_key2
        
  ssh-action-test:
    runs-on: ubuntu-latest
    needs: debug-ssh-detailed
    if: always()
    
    steps:
    - name: Test with SSH Action (Debug Mode)
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: sogoodsnet.sakura.ne.jp
        username: sogoodsnet
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        timeout: 30s
        command_timeout: 30s
        debug: true
        script: |
          echo "🎉 SSH Action接続成功!"
          echo "現在のユーザー: $(whoami)"
          echo "現在のディレクトリ: $(pwd)"  
          echo "システム情報: $(uname -a)"
          echo "現在時刻: $(date)"
          
          # ホームディレクトリ確認
          echo "ホームディレクトリ: $HOME"
          ls -la $HOME
          
          # SSH設定確認
          echo "SSH設定:"
          ls -la ~/.ssh/ 2>/dev/null || echo "~/.ssh not found"
          
          # 権限確認
          echo "authorized_keys権限:"
          ls -la ~/.ssh/authorized_keys 2>/dev/null || echo "authorized_keys not found"
          
    - name: SSH Connection Summary
      if: always()
      run: |
        echo "## 🔍 SSH接続テスト結果" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ job.status }}" == "success" ]; then
          echo "- **SSH Action Status**: ✅ 成功" >> $GITHUB_STEP_SUMMARY
          echo "- **接続確認**: SSH接続が正常に動作しています" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **SSH Action Status**: ❌ 失敗" >> $GITHUB_STEP_SUMMARY
          echo "- **必要な確認事項**:" >> $GITHUB_STEP_SUMMARY
          echo "  1. SSH_PRIVATE_KEY Secretの内容確認" >> $GITHUB_STEP_SUMMARY
          echo "  2. Sakuraサーバーのauthorized_keys確認" >> $GITHUB_STEP_SUMMARY
          echo "  3. SSH鍵ペアの再生成" >> $GITHUB_STEP_SUMMARY
        fi